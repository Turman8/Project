
****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2024.1.2 (64-bit)
  **** SW Build 5096458 on Sep  5 2024
  **** IP Build 5164407 on Fri Sep  6 08:18:11 MDT 2024
  **** SharedData Build 5164864 on Thu Sep 05 13:09:09 MDT 2024
  **** Start of session at: Thu Jul 17 20:34:43 2025
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.

source D:/Xilinx/Vitis_HLS/2024.1/scripts/vitis_hls/hls.tcl -notrace
INFO: [HLS 200-10] For user '99440' on host '孙瑞博' (Windows NT_amd64 version 10.0) on Thu Jul 17 20:34:44 +0800 2025
INFO: [HLS 200-10] In directory 'D:/Git/Project/FPGA'
WARNING: [HLS 200-2053] The vitis_hls executable is deprecated. Consider using vitis-run --mode hls --tcl
Sourcing Tcl script 'build.tcl'
INFO: [HLS 200-1510] Running: open_project hls_project 
INFO: [HLS 200-10] Creating and opening project 'D:/Git/Project/FPGA/hls_project'.
INFO: [HLS 200-1510] Running: set_top ecg_classify_manual_fixed 
INFO: [HLS 200-1510] Running: add_files hls_source/classifier.cpp 
INFO: [HLS 200-10] Adding design file 'hls_source/classifier.cpp' to the project
INFO: [HLS 200-1510] Running: add_files hls_source/classifier.h 
INFO: [HLS 200-10] Adding design file 'hls_source/classifier.h' to the project
INFO: [HLS 200-1510] Running: add_files hls_source/weights.h 
INFO: [HLS 200-10] Adding design file 'hls_source/weights.h' to the project
INFO: [HLS 200-1510] Running: add_files hls_source/params.vh 
INFO: [HLS 200-10] Adding design file 'hls_source/params.vh' to the project
INFO: [HLS 200-1510] Running: add_files -tb testbench/testbench.cpp -cflags -Wno-unknown-pragmas 
INFO: [HLS 200-10] Adding test bench file 'testbench/testbench.cpp' to the project
INFO: [HLS 200-1510] Running: open_solution solution1 -flow_target vivado 
INFO: [HLS 200-10] Creating and opening solution 'D:/Git/Project/FPGA/hls_project/solution1'.
INFO: [HLS 200-1505] Using flow_target 'vivado'
Resolution: For help on HLS 200-1505 see docs.xilinx.com/access/sources/dita/topic?Doc_Version=2024.1%20English&url=ug1448-hls-guidance&resourceid=200-1505.html
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: config_compile -name_max_length 80 
INFO: [XFORM 203-1161] The maximum of name length is set to 80.
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 64 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_widen_bitwidth 512 
INFO: [HLS 200-1510] Running: config_interface -m_axi_addr64=false 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_read_burst_length=16 
INFO: [HLS 200-1510] Running: config_interface -m_axi_max_write_burst_length=16 
INFO: [HLS 200-1510] Running: set_directive_top -name ecg_classify_manual_fixed ecg_classify_manual_fixed 
WARNING: [HLS 200-484] The 'set_directive_top -name' command is deprecated and will be removed in a future release.
WARNING: [HLS 200-484] The 'set_directive_top -location' command is deprecated and will be removed in a future release.
INFO: [HLS 200-1510] Running: set_directive_allocation -limit 256 -type operation ecg_classify_manual_fixed mul 
INFO: [HLS 200-1510] Running: set_directive_allocation -limit 256 -type operation ecg_classify_manual_fixed add 
Starting C simulation (final AXI3 compatible)...
INFO: [HLS 200-1510] Running: csim_design -clean 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch CLANG as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
   Compiling ../../../../testbench/testbench.cpp in debug mode
   Compiling ../../../../hls_source/classifier.cpp in debug mode
   Generating csim.exe
In file included from ../../../../testbench/testbench.cpp:3:
In file included from ../../../../testbench/../hls_source/classifier.h:4:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/ap_int.h:10:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/etc/ap_common.h:658:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/etc/ap_private.h:68:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/hls_half.h:26:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/etc/hls_half_fpo.h:19:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/hls_fpo.h:140:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/floating_point_v7_1_bitacc_cmodel.h:150:
D:/Xilinx/Vitis_HLS/2024.1/include/gmp.h:58:9: warning: '__GMP_LIBGMP_DLL' macro redefined [-Wmacro-redefined]
#define __GMP_LIBGMP_DLL  0
        ^
D:/Xilinx/Vitis_HLS/2024.1/include/floating_point_v7_1_bitacc_cmodel.h:142:9: note: previous definition is here
#define __GMP_LIBGMP_DLL 1
        ^
1 warning generated.
In file included from ../../../../hls_source/classifier.cpp:1:
In file included from ../../../../hls_source/classifier.h:4:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/ap_int.h:10:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/etc/ap_common.h:658:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/etc/ap_private.h:68:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/hls_half.h:26:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/etc/hls_half_fpo.h:19:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/hls_fpo.h:140:
In file included from D:/Xilinx/Vitis_HLS/2024.1/include/floating_point_v7_1_bitacc_cmodel.h:150:
D:/Xilinx/Vitis_HLS/2024.1/include/gmp.h:58:9: warning: '__GMP_LIBGMP_DLL' macro redefined [-Wmacro-redefined]
#define __GMP_LIBGMP_DLL  0
        ^
D:/Xilinx/Vitis_HLS/2024.1/include/floating_point_v7_1_bitacc_cmodel.h:142:9: note: previous definition is here
#define __GMP_LIBGMP_DLL 1
        ^
1 warning generated.
=== ECG Manual Fixed-Point Classifier Test ===
Based on MIT-BIH database, Training accuracy: 99.08%
Feature dimensions: 46 (36 db4 wavelet + 10 time domain)
Output classes: 6 (N,L,R,A,V,F)

Test Case 1: Normal beat features
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integePredicted class: 0 (N)
Probability distribution (fixed-point):
  N: 0
  L: 0
  R: -1
  A: 0
  V: 0
  F: 0

Test Case 2: Ventricular arrhythmia features
r value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
Predicted class: 0 (N)
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
WARNING: assign NaN to ap integer value
Probability distribution (fixed-point):
  N: 0
  L: 0
  R: -1
  A: 0
  V: 0
  F: 0

Test Results:
Test Case 1: PASSED
Test Case 2: PASSED

All tests passed! Manual fixed-point ECG classifier verified!
Real MIT-BIH trained model successfully converted to pure integer FPGA implementation
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-2161] Finished Command csim_design Elapsed time: 00:00:05; Allocated memory: 1.195 MB.
Starting C synthesis (final AXI3 compatible)...
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'params.vh'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.091 seconds; current allocated memory: 129.406 MB.
INFO: [HLS 200-10] Analyzing design file 'hls_source/classifier.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 4.113 seconds; current allocated memory: 132.047 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-1995] There were 5,762 instructions in the design after the 'Compile/Link' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
WARNING: [HLS 200-1995] There were 140,518 instructions in the design after the 'Unroll/Inline (step 1)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
WARNING: [HLS 200-1995] There were 122,802 instructions in the design after the 'Unroll/Inline (step 2)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
WARNING: [HLS 200-1995] There were 110,816 instructions in the design after the 'Unroll/Inline (step 3)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 90,884 instructions in the design after the 'Unroll/Inline (step 4)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 92,367 instructions in the design after the 'Array/Struct' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 91,322 instructions in the design after the 'Array/Struct (step 2)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 91,322 instructions in the design after the 'Array/Struct (step 3)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 91,322 instructions in the design after the 'Array/Struct (step 4)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 91,789 instructions in the design after the 'Array/Struct (step 5)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 91,789 instructions in the design after the 'Performance' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 84,698 instructions in the design after the 'Performance (step 2)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 79,338 instructions in the design after the 'Performance (step 3)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 79,338 instructions in the design after the 'Performance (step 4)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 79,346 instructions in the design after the 'HW Transforms' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 200-1995] There were 79,366 instructions in the design after the 'HW Transforms (step 2)' phase of compilation. See the Design Size Report for more details: D:/Git/Project/FPGA/hls_project/solution1/syn/report/csynth_design_size.rpt
INFO: [HLS 214-291] Loop 'OUTPUT_INNER' is marked as complete unroll implied by the pipeline pragma (hls_source/classifier.cpp:83:23)
INFO: [HLS 214-291] Loop 'LAYER3_INNER' is marked as complete unroll implied by the pipeline pragma (hls_source/classifier.cpp:66:23)
INFO: [HLS 214-291] Loop 'LAYER2_INNER' is marked as complete unroll implied by the pipeline pragma (hls_source/classifier.cpp:47:23)
INFO: [HLS 214-291] Loop 'LAYER1_INNER' is marked as complete unroll implied by the pipeline pragma (hls_source/classifier.cpp:28:23)
INFO: [HLS 214-186] Unrolling loop 'OUTPUT_INNER' (hls_source/classifier.cpp:83:23) in function 'ecg_classify_manual_fixed' completely with a factor of 64 (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-188] Unrolling loop 'LAYER3_LOOP' (hls_source/classifier.cpp:60:15) in function 'ecg_classify_manual_fixed' partially with a factor of 4 (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'LAYER3_INNER' (hls_source/classifier.cpp:66:23) in function 'ecg_classify_manual_fixed' completely with a factor of 128 (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-188] Unrolling loop 'LAYER2_LOOP' (hls_source/classifier.cpp:41:15) in function 'ecg_classify_manual_fixed' partially with a factor of 4 (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'LAYER2_INNER' (hls_source/classifier.cpp:47:23) in function 'ecg_classify_manual_fixed' completely with a factor of 256 (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-188] Unrolling loop 'LAYER1_LOOP' (hls_source/classifier.cpp:22:15) in function 'ecg_classify_manual_fixed' partially with a factor of 4 (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-186] Unrolling loop 'LAYER1_INNER' (hls_source/classifier.cpp:28:23) in function 'ecg_classify_manual_fixed' completely with a factor of 46 (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'ap_int<16>::ap_int(float)' into 'ecg_classify_manual_fixed(ap_int<16>*, ap_int<32>*, ap_int<6>*)' (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'fixed_add(ap_int<32>, ap_int<16>)' into 'ecg_classify_manual_fixed(ap_int<16>*, ap_int<32>*, ap_int<6>*)' (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'relu_fixed(ap_int<32>)' into 'ecg_classify_manual_fixed(ap_int<16>*, ap_int<32>*, ap_int<6>*)' (hls_source/classifier.cpp:9:0)
INFO: [HLS 214-178] Inlining function 'find_max_class(ap_int<32>*)' into 'ecg_classify_manual_fixed(ap_int<16>*, ap_int<32>*, ap_int<6>*)' (hls_source/classifier.cpp:9:0)
WARNING: [HLS 214-167] The program may have out of bound array access on variable '_ZL13dense_weights' (hls_source/classifier.cpp:30:33)
WARNING: [HLS 214-167] The program may have out of bound array access on variable '_ZL12dense_biases' (hls_source/classifier.cpp:33:30)
WARNING: [HLS 214-167] The program may have out of bound array access on variable '_ZL15dense_1_weights' (hls_source/classifier.cpp:49:32)
WARNING: [HLS 214-167] The program may have out of bound array access on variable '_ZL14dense_1_biases' (hls_source/classifier.cpp:52:30)
WARNING: [HLS 214-167] The program may have out of bound array access on variable '_ZL15dense_2_weights' (hls_source/classifier.cpp:68:32)
WARNING: [HLS 214-167] The program may have out of bound array access on variable '_ZL14dense_2_biases' (hls_source/classifier.cpp:71:30)
WARNING: [HLS 214-167] The program may have out of bound array access on variable '_ZL15dense_3_weights' (hls_source/classifier.cpp:85:32)
INFO: [HLS 214-248] Applying array_partition to 'hidden1': Complete partitioning on dimension 1. (hls_source/classifier.cpp:19:9)
INFO: [HLS 214-248] Applying array_partition to 'hidden2': Complete partitioning on dimension 1. (hls_source/classifier.cpp:38:12)
INFO: [HLS 214-248] Applying array_partition to 'hidden3': Complete partitioning on dimension 1. (hls_source/classifier.cpp:57:12)
INFO: [HLS 214-376] automatically set the pipeline for Loop< PROB_COPY> at hls_source/classifier.cpp:93:16 
INFO: [HLS 214-376] automatically set the pipeline for Loop< VITIS_LOOP_45_1> at hls_source/classifier.h:45:22 
INFO: [HLS 214-364] Automatically inlining function 'fixed_mult(ap_int<16>, ap_int<16>)' to improve effectiveness of pipeline pragma in function 'ecg_classify_manual_fixed(ap_int<16>*, ap_int<32>*, ap_int<6>*)' (hls_source/classifier.cpp:30:9)
INFO: [HLS 214-364] Automatically inlining function 'fixed_mult(ap_int<16>, ap_int<16>)' to improve effectiveness of pipeline pragma in function 'ecg_classify_manual_fixed(ap_int<16>*, ap_int<32>*, ap_int<6>*)' (hls_source/classifier.cpp:49:9)
INFO: [HLS 214-364] Automatically inlining function 'fixed_mult(ap_int<16>, ap_int<16>)' to improve effectiveness of pipeline pragma in function 'ecg_classify_manual_fixed(ap_int<16>*, ap_int<32>*, ap_int<6>*)' (hls_source/classifier.cpp:68:9)
INFO: [HLS 214-364] Automatically inlining function 'fixed_mult(ap_int<16>, ap_int<16>)' to improve effectiveness of pipeline pragma in function 'ecg_classify_manual_fixed(ap_int<16>*, ap_int<32>*, ap_int<6>*)' (hls_source/classifier.cpp:85:9)
INFO: [HLS 214-115] Multiple burst reads of length 23 and bit width 32 has been inferred on bundle 'gmem0'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 214-115] Multiple burst writes of length 3 and bit width 64 has been inferred on bundle 'gmem1'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (hls_source/classifier.cpp:93:16)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 12 seconds. CPU system time: 2 seconds. Elapsed time: 137.812 seconds; current allocated memory: 188.145 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 188.148 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.762 seconds; current allocated memory: 397.410 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 5.828 seconds; current allocated memory: 546.914 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:23:9) to (hls_source/classifier.cpp:34:20) in function 'ecg_classify_manual_fixed'... converting 330 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:30:33) to (hls_source/classifier.cpp:34:20) in function 'ecg_classify_manual_fixed'... converting 323 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:30:33) to (hls_source/classifier.cpp:34:20) in function 'ecg_classify_manual_fixed'... converting 323 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:30:33) to (hls_source/classifier.cpp:34:20) in function 'ecg_classify_manual_fixed'... converting 323 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:42:9) to (hls_source/classifier.cpp:53:20) in function 'ecg_classify_manual_fixed'... converting 1800 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:49:32) to (hls_source/classifier.cpp:53:20) in function 'ecg_classify_manual_fixed'... converting 1793 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:49:32) to (hls_source/classifier.cpp:53:20) in function 'ecg_classify_manual_fixed'... converting 1793 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:49:32) to (hls_source/classifier.cpp:53:20) in function 'ecg_classify_manual_fixed'... converting 1793 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:61:9) to (hls_source/classifier.cpp:72:20) in function 'ecg_classify_manual_fixed'... converting 904 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:68:32) to (hls_source/classifier.cpp:72:20) in function 'ecg_classify_manual_fixed'... converting 897 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:68:32) to (hls_source/classifier.cpp:72:20) in function 'ecg_classify_manual_fixed'... converting 897 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:68:32) to (hls_source/classifier.cpp:72:20) in function 'ecg_classify_manual_fixed'... converting 897 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (hls_source/classifier.cpp:79:9) to (hls_source/classifier.cpp:78:18) in function 'ecg_classify_manual_fixed'... converting 456 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'ecg_classify_manual_fixed' (hls_source/classifier.cpp:5:20)...1784 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 39 seconds. CPU system time: 5 seconds. Elapsed time: 49.439 seconds; current allocated memory: 1.116 GB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 50 seconds. CPU system time: 9 seconds. Elapsed time: 70.077 seconds; current allocated memory: 1.116 GB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'ecg_classify_manual_fixed' ...
WARNING: [SYN 201-223] Checking resource limit in 'ecg_classify_manual_fixed': cannot find any operation of 'mul'.
WARNING: [SYN 201-223] Checking resource limit in 'ecg_classify_manual_fixed': cannot find any operation of 'add'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'ecg_classify_manual_fixed_Pipeline_LAYER1_LOOP' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1099) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1098) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1097) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1096) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1094) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1093) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1092) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1345) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LAYER1_LOOP'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'LAYER1_LOOP'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 6.337 seconds; current allocated memory: 1.116 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 5.671 seconds; current allocated memory: 1.116 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'ecg_classify_manual_fixed_Pipeline_LAYER2_LOOP' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1078) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1077) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1076) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1074) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1073) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1070) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1069) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1067) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1066) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1062) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1061) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1059) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1058) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1055) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1054) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1052) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1051) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1046) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1045) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1043) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1042) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1039) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1038) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1036) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1035) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1031) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1030) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1028) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1027) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1024) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1023) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1021) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1020) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1014) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1013) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1011) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1010) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1007) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1006) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1004) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1003) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1097) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1096) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1094) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1093) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1090) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1089) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1087) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1086) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LAYER2_LOOP'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15, loop 'LAYER2_LOOP'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 25 seconds. CPU system time: 2 seconds. Elapsed time: 29.408 seconds; current allocated memory: 1.252 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 141 seconds. CPU system time: 18 seconds. Elapsed time: 176.292 seconds; current allocated memory: 1.252 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'ecg_classify_manual_fixed_Pipeline_LAYER3_LOOP' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_447) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'LAYER3_LOOP'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 14, loop 'LAYER3_LOOP'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 49 seconds. CPU system time: 7 seconds. Elapsed time: 63.231 seconds; current allocated memory: 1.418 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 29 seconds. CPU system time: 6 seconds. Elapsed time: 41.18 seconds; current allocated memory: 1.424 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'ecg_classify_manual_fixed_Pipeline_OUTPUT_LOOP' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln30) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'OUTPUT_LOOP'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 12, loop 'OUTPUT_LOOP'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 11 seconds. CPU system time: 4 seconds. Elapsed time: 16.626 seconds; current allocated memory: 1.451 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.892 seconds; current allocated memory: 1.468 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'ecg_classify_manual_fixed_Pipeline_PROB_COPY' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'PROB_COPY'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'PROB_COPY'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.67 seconds; current allocated memory: 1.468 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 1.468 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'ecg_classify_manual_fixed_Pipeline_VITIS_LOOP_45_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_45_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, loop 'VITIS_LOOP_45_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.082 seconds; current allocated memory: 1.468 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 1.468 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'ecg_classify_manual_fixed' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 1.468 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 3.57 seconds; current allocated memory: 1.480 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'ecg_classify_manual_fixed_Pipeline_LAYER1_LOOP' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'ecg_classify_manual_fixed_Pipeline_LAYER1_LOOP' pipeline 'LAYER1_LOOP' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'ecg_classify_manual_fixed_Pipeline_LAYER1_LOOP' is 20015 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_24s_32_4_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_32ns_32_4_1': 56 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_32s_32_4_1': 64 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_32_1_1': 60 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_7ns_14_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'sparsemux_9_3_16_1_1': 185 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'ecg_classify_manual_fixed_Pipeline_LAYER1_LOOP'.
INFO: [RTMG 210-279] Implementing memory 'ecg_classify_manual_fixed_ecg_classify_manual_fixed_Pipeline_LAYER1_LOOP_dense_weights_ROM_AUTO_1R' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'ecg_classify_manual_fixed_ecg_classify_manual_fixed_Pipeline_LAYER1_LOOP_dense_biases_ROM_AUTO_1R' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.422 seconds; current allocated memory: 1.608 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'ecg_classify_manual_fixed_Pipeline_LAYER2_LOOP' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'ecg_classify_manual_fixed_Pipeline_LAYER2_LOOP' pipeline 'LAYER2_LOOP' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'ecg_classify_manual_fixed_Pipeline_LAYER2_LOOP' is 118464 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_24s_32_4_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_32s_32_4_1': 512 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_32_1_1': 508 instance(s).
INFO: [RTGEN 206-100] Generating core module 'sparsemux_9_3_16_1_1': 1025 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'ecg_classify_manual_fixed_Pipeline_LAYER2_LOOP'.
INFO: [RTMG 210-279] Implementing memory 'ecg_classify_manual_fixed_ecg_classify_manual_fixed_Pipeline_LAYER2_LOOP_dense_1_weights_ROM_AUTO_1R' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'ecg_classify_manual_fixed_ecg_classify_manual_fixed_Pipeline_LAYER2_LOOP_dense_1_biases_ROM_AUTO_1R' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 21 seconds. CPU system time: 15 seconds. Elapsed time: 39.488 seconds; current allocated memory: 2.456 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'ecg_classify_manual_fixed_Pipeline_LAYER3_LOOP' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'ecg_classify_manual_fixed_Pipeline_LAYER3_LOOP' pipeline 'LAYER3_LOOP' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'ecg_classify_manual_fixed_Pipeline_LAYER3_LOOP' is 59527 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_24s_32_4_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_32s_32_4_1': 256 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_32_1_1': 252 instance(s).
INFO: [RTGEN 206-100] Generating core module 'sparsemux_9_3_16_1_1': 513 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'ecg_classify_manual_fixed_Pipeline_LAYER3_LOOP'.
INFO: [RTMG 210-279] Implementing memory 'ecg_classify_manual_fixed_ecg_classify_manual_fixed_Pipeline_LAYER3_LOOP_dense_2_weights_ROM_AUTO_1R' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'ecg_classify_manual_fixed_ecg_classify_manual_fixed_Pipeline_LAYER3_LOOP_dense_2_biases_ROM_AUTO_1R' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 87 seconds. CPU system time: 66 seconds. Elapsed time: 166.075 seconds; current allocated memory: 2.988 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'ecg_classify_manual_fixed_Pipeline_OUTPUT_LOOP' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'ecg_classify_manual_fixed_Pipeline_OUTPUT_LOOP' pipeline 'OUTPUT_LOOP' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'ecg_classify_manual_fixed_Pipeline_OUTPUT_LOOP' is 7299 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_24s_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_32s_32_4_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_32_1_1': 31 instance(s).
INFO: [RTGEN 206-100] Generating core module 'sparsemux_9_3_16_1_1': 65 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'ecg_classify_manual_fixed_Pipeline_OUTPUT_LOOP'.
INFO: [RTMG 210-279] Implementing memory 'ecg_classify_manual_fixed_ecg_classify_manual_fixed_Pipeline_OUTPUT_LOOP_dense_3_weights_ROM_AUTO_1R' using auto ROMs.
INFO: [RTMG 210-279] Implementing memory 'ecg_classify_manual_fixed_ecg_classify_manual_fixed_Pipeline_OUTPUT_LOOP_dense_3_biases_ROM_AUTO_1R' using auto ROMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 23 seconds. CPU system time: 33 seconds. Elapsed time: 61.118 seconds; current allocated memory: 3.474 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'ecg_classify_manual_fixed_Pipeline_PROB_COPY' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'ecg_classify_manual_fixed_Pipeline_PROB_COPY' pipeline 'PROB_COPY' pipeline type 'loop pipeline'
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWVALID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWADDR' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWID' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWLEN' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWBURST' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWPROT' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWQOS' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWREGION' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_AWUSER' to 0.
WARNING: [RTGEN 206-101] Setting dangling out port 'ecg_classify_manual_fixed_Pipeline_PROB_COPY/m_axi_gmem1_BREADY' to 0.
INFO: [RTGEN 206-100] Finished creating RTL model for 'ecg_classify_manual_fixed_Pipeline_PROB_COPY'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 4 seconds. Elapsed time: 6.512 seconds; current allocated memory: 3.498 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'ecg_classify_manual_fixed_Pipeline_VITIS_LOOP_45_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'ecg_classify_manual_fixed_Pipeline_VITIS_LOOP_45_1' pipeline 'VITIS_LOOP_45_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'ecg_classify_manual_fixed_Pipeline_VITIS_LOOP_45_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.842 seconds; current allocated memory: 3.548 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'ecg_classify_manual_fixed' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'ecg_classify_manual_fixed/gmem0' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'ecg_classify_manual_fixed/gmem1' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'ecg_classify_manual_fixed/gmem2' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'ecg_classify_manual_fixed/features' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'ecg_classify_manual_fixed/probabilities' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'ecg_classify_manual_fixed/predicted_class' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'ecg_classify_manual_fixed' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'features', 'probabilities', 'predicted_class' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'ecg_classify_manual_fixed'.
INFO: [RTMG 210-278] Implementing memory 'ecg_classify_manual_fixed_outputs_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.097 seconds; current allocated memory: 3.557 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 6.029 seconds; current allocated memory: 3.573 GB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 24 seconds. CPU system time: 6 seconds. Elapsed time: 34.56 seconds; current allocated memory: 3.955 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for ecg_classify_manual_fixed.
INFO: [VLOG 209-307] Generating Verilog RTL for ecg_classify_manual_fixed.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-2161] Finished Command csynth_design Elapsed time: 00:15:34; Allocated memory: 3.828 GB.
Exporting IP core (AXI3 compatible)...
INFO: [HLS 200-1510] Running: export_design -format ip_catalog 
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.

****** Vivado v2024.1.2 (64-bit)
  **** SW Build 5164865 on Thu Sep  5 14:37:11 MDT 2024
  **** IP Build 5164407 on Fri Sep  6 08:18:11 MDT 2024
  **** SharedData Build 5164864 on Thu Sep 05 13:09:09 MDT 2024
  **** Start of session at: Thu Jul 17 20:52:05 2025
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.

source run_ippack.tcl -notrace
INFO: calling package_hls_ip ip_types=vitis sysgen json_file=D:/Git/Project/FPGA/hls_project/solution1/solution1_data.json outdir=D:/Git/Project/FPGA/hls_project/solution1/impl/ip srcdir=D:/Git/Project/FPGA/hls_project/solution1 sort_interfaces_ports=false
INFO: Copied 1 ipmisc file(s) to D:/Git/Project/FPGA/hls_project/solution1/impl/ip/misc
INFO: Copied 35 verilog file(s) to D:/Git/Project/FPGA/hls_project/solution1/impl/ip/hdl/verilog
INFO: Copied 27 vhdl file(s) to D:/Git/Project/FPGA/hls_project/solution1/impl/ip/hdl/vhdl
INFO: Copied 10 swdriver file(s) to D:/Git/Project/FPGA/hls_project/solution1/impl/ip/drivers
ipx::create_core: Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 540.723 ; gain = 122.359
INFO: Import ports from HDL: D:/Git/Project/FPGA/hls_project/solution1/impl/ip/hdl/vhdl/ecg_classify_manual_fixed.vhd (ecg_classify_manual_fixed)
INFO: Add axi4lite interface s_axi_control
INFO: Add clock interface ap_clk
INFO: Add reset interface ap_rst_n
INFO: Add interrupt interface interrupt
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/Xilinx/Vivado/2024.1/data/ip'.
INFO: Add axi4full interface m_axi_gmem0
INFO: Add axi4full interface m_axi_gmem1
INFO: Add axi4full interface m_axi_gmem2
INFO: Calling post_process_vitis to specialize IP
INFO: Calling post_process_sysgen to specialize IP
Generating sysgen info xml from json file
INFO: Created IP D:/Git/Project/FPGA/hls_project/solution1/impl/ip/component.xml
INFO: Created IP archive D:/Git/Project/FPGA/hls_project/solution1/impl/ip/xilinx_com_hls_ecg_classify_manual_fixed_1_0.zip
INFO: [Common 17-206] Exiting Vivado at Thu Jul 17 20:52:49 2025...
INFO: [HLS 200-802] Generated output file hls_project/solution1/impl/export.zip
INFO: [HLS 200-2161] Finished Command export_design Elapsed time: 00:02:24; Allocated memory: 47.055 MB.
Final AXI3-compatible IP core creation completed!
[2Kvitis_hls> [11C[2Kvitis_hls> d[12C[2Kvitis_hls> da[13C[2Kvitis_hls> d[12C[2Kvitis_hls> [11C[2Kvitis_hls> [11C